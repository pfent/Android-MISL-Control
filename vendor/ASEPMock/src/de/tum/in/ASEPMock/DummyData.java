package de.tum.in.ASEPMock;

public class DummyData {
    /**
     * The first few packets from Hectors packetdump
     */
    public static final byte[][] mockPackets = {
            {(byte) 0x02, (byte) 0x03, (byte) 0x00, (byte) 0x40,        //Version and size
                    (byte) 0x00, (byte) 0x01, (byte) 0x00, (byte) 0x01, //Sequence count, note that this is not changing
                    (byte) 0x40, (byte) 0x48, (byte) 0x1f, (byte) 0xb2, //X-Euler
                    (byte) 0x3d, (byte) 0x3e, (byte) 0x58, (byte) 0xa9, //Y-Euler
                    (byte) 0x40, (byte) 0x34, (byte) 0x79, (byte) 0x55, //Z-Euler
                    (byte) 0x3d, (byte) 0x2c, (byte) 0x34, (byte) 0xae, //X-Accel
                    (byte) 0xbd, (byte) 0x09, (byte) 0xac, (byte) 0x00, //Y-Accel
                    (byte) 0x3f, (byte) 0x7f, (byte) 0xde, (byte) 0x9f, //Z-Accel
                    (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, //Latitude
                    (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00, //Longitude
                    (byte) 0x30, (byte) 0x30, (byte) 0x31, (byte) 0x31, //Padding starts here
                    (byte) 0x32, (byte) 0x32, (byte) 0x33, (byte) 0x33,
                    (byte) 0x34, (byte) 0x34, (byte) 0x35, (byte) 0x35,
                    (byte) 0x36, (byte) 0x36, (byte) 0x37, (byte) 0x37,
                    (byte) 0x38, (byte) 0x38, (byte) 0x39, (byte) 0x39,
                    (byte) 0x3a, (byte) 0x3a, (byte) 0x3b, (byte) 0x3b},
            {(byte) 0x02, (byte) 0x03, (byte) 0x00, (byte) 0x40,
                    (byte) 0x00, (byte) 0x01, (byte) 0x00, (byte) 0x01,
                    (byte) 0x40, (byte) 0x48, (byte) 0x20, (byte) 0xf8,
                    (byte) 0x3d, (byte) 0x3e, (byte) 0xd8, (byte) 0x1f,
                    (byte) 0x40, (byte) 0x34, (byte) 0x74, (byte) 0x7a,
                    (byte) 0x3d, (byte) 0x28, (byte) 0x71, (byte) 0xd2,
                    (byte) 0xbd, (byte) 0x0c, (byte) 0x11, (byte) 0xf5,
                    (byte) 0x3f, (byte) 0x7f, (byte) 0x44, (byte) 0xea,
                    (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
                    (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
                    (byte) 0x30, (byte) 0x30, (byte) 0x31, (byte) 0x31,
                    (byte) 0x32, (byte) 0x32, (byte) 0x33, (byte) 0x33,
                    (byte) 0x34, (byte) 0x34, (byte) 0x35, (byte) 0x35,
                    (byte) 0x36, (byte) 0x36, (byte) 0x37, (byte) 0x37,
                    (byte) 0x38, (byte) 0x38, (byte) 0x39, (byte) 0x39,
                    (byte) 0x3a, (byte) 0x3a, (byte) 0x3b, (byte) 0x3b},
            {(byte) 0x02, (byte) 0x03, (byte) 0x00, (byte) 0x40,
                    (byte) 0x00, (byte) 0x01, (byte) 0x00, (byte) 0x01,
                    (byte) 0x40, (byte) 0x48, (byte) 0x1b, (byte) 0xe7,
                    (byte) 0x3d, (byte) 0x3e, (byte) 0xf5, (byte) 0x45,
                    (byte) 0x40, (byte) 0x34, (byte) 0x75, (byte) 0x4f,
                    (byte) 0x3d, (byte) 0x2c, (byte) 0xf8, (byte) 0xc2,
                    (byte) 0xbd, (byte) 0x0a, (byte) 0x16, (byte) 0xa4,
                    (byte) 0x3f, (byte) 0x7f, (byte) 0xc3, (byte) 0x67,
                    (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
                    (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
                    (byte) 0x30, (byte) 0x30, (byte) 0x31, (byte) 0x31,
                    (byte) 0x32, (byte) 0x32, (byte) 0x33, (byte) 0x33,
                    (byte) 0x34, (byte) 0x34, (byte) 0x35, (byte) 0x35,
                    (byte) 0x36, (byte) 0x36, (byte) 0x37, (byte) 0x37,
                    (byte) 0x38, (byte) 0x38, (byte) 0x39, (byte) 0x39,
                    (byte) 0x3a, (byte) 0x3a, (byte) 0x3b, (byte) 0x3b},
            {(byte) 0x02, (byte) 0x03, (byte) 0x00, (byte) 0x40,
                    (byte) 0x00, (byte) 0x01, (byte) 0x00, (byte) 0x01,
                    (byte) 0x40, (byte) 0x48, (byte) 0x1c, (byte) 0x1e,
                    (byte) 0x3d, (byte) 0x3e, (byte) 0x97, (byte) 0xb0,
                    (byte) 0x40, (byte) 0x34, (byte) 0x73, (byte) 0x26,
                    (byte) 0x3d, (byte) 0x29, (byte) 0x06, (byte) 0xca,
                    (byte) 0xbd, (byte) 0x05, (byte) 0xbb, (byte) 0xd8,
                    (byte) 0x3f, (byte) 0x7f, (byte) 0xe9, (byte) 0xa2,
                    (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
                    (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
                    (byte) 0x30, (byte) 0x30, (byte) 0x31, (byte) 0x31,
                    (byte) 0x32, (byte) 0x32, (byte) 0x33, (byte) 0x33,
                    (byte) 0x34, (byte) 0x34, (byte) 0x35, (byte) 0x35,
                    (byte) 0x36, (byte) 0x36, (byte) 0x37, (byte) 0x37,
                    (byte) 0x38, (byte) 0x38, (byte) 0x39, (byte) 0x39,
                    (byte) 0x3a, (byte) 0x3a, (byte) 0x3b, (byte) 0x3b},
            {(byte) 0x02, (byte) 0x03, (byte) 0x00, (byte) 0x40,
                    (byte) 0x00, (byte) 0x01, (byte) 0x00, (byte) 0x01,
                    (byte) 0x40, (byte) 0x48, (byte) 0x1d, (byte) 0xd4,
                    (byte) 0x3d, (byte) 0x3f, (byte) 0x66, (byte) 0xd3,
                    (byte) 0x40, (byte) 0x34, (byte) 0x75, (byte) 0xbf,
                    (byte) 0x3d, (byte) 0x26, (byte) 0xb3, (byte) 0xfa,
                    (byte) 0xbd, (byte) 0x07, (byte) 0x7b, (byte) 0xf1,
                    (byte) 0x3f, (byte) 0x7f, (byte) 0xc2, (byte) 0x3e,
                    (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
                    (byte) 0x00, (byte) 0x00, (byte) 0x00, (byte) 0x00,
                    (byte) 0x30, (byte) 0x30, (byte) 0x31, (byte) 0x31,
                    (byte) 0x32, (byte) 0x32, (byte) 0x33, (byte) 0x33,
                    (byte) 0x34, (byte) 0x34, (byte) 0x35, (byte) 0x35,
                    (byte) 0x36, (byte) 0x36, (byte) 0x37, (byte) 0x37,
                    (byte) 0x38, (byte) 0x38, (byte) 0x39, (byte) 0x39,
                    (byte) 0x3a, (byte) 0x3a, (byte) 0x3b, (byte) 0x3b}
    };
}
